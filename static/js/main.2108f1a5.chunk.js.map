{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","todos","setTodos","todo","useRef","console","log","current","className","ref","onClick","value","map","i","e","newTodo","splice","delTodo","edit","prompt","currentTodo","editTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAqDeA,MAjDf,WAAgB,IAAD,EACUC,mBAAS,IADnB,mBACRC,EADQ,KACFC,EADE,KAETC,EAAOC,mBAyBX,OArBAC,QAAQC,IAAIH,EAAKI,SAsBf,sBAAKC,UAAU,MAAf,UAEE,0CACA,uBAAOC,IAAKN,IAAO,wBAAQO,QAtBhB,WACbR,EAAS,GAAD,mBAAKD,GAAL,CAAWE,EAAKI,QAAQI,SAChCR,EAAKI,QAAQI,MAAO,IAoBC,iBAEjBV,EAAMW,KAAI,SAACT,EAAKU,GACd,OAEI,gCACCV,EACH,wBAAQO,QAAS,SAACI,IAzBd,SAACD,GACbR,QAAQC,IAAI,gBAAiBO,GAC7B,IAAIE,EAAO,YAAOd,GAClBI,QAAQC,IAAI,kBAAmBS,GAC/BA,EAAQC,OAAOH,EAAE,GACjBX,EAASa,GAoBsBE,CAAQJ,IAA/B,oBACA,wBAAQH,QAAS,SAACI,IAlBX,SAACA,GACjB,IAAII,EAAOC,OAAO,kBACdC,EAAW,YAAOnB,GACtBmB,EAAYN,GAAKI,EAChBhB,EAASkB,GAcsBC,CAASR,IAAhC,oBAHYA,UC5BTS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2108f1a5.chunk.js","sourcesContent":["import { useRef, useState , useEffect} from 'react';\nimport './App.css';\n\n\nfunction App() {\n  let [todos,setTodos] = useState([])\n  let todo = useRef()\n  \n  \n \n  console.log(todo.current);\n\n\n  const addTodo =()=>{\n    setTodos([...todos,todo.current.value])\n    todo.current.value =''\n  }\n  const delTodo=(i)=>{\n    console.log(\"index is = > \" ,i);\n    var newTodo = [...todos];\n    console.log(\"new todo is => \" ,newTodo);\n    newTodo.splice(i,1);\n    setTodos(newTodo);\n    \n  }\n  const editTodo = (e) =>{\n   var edit = prompt(\"Edit your todo\")\n   var currentTodo = [...todos]\n   currentTodo[e] = edit\n    setTodos(currentTodo)\n  }\n  return (\n    <div className=\"App\">\n     \n      <h1>Todo App</h1>  \n      <input ref={todo}/><button onClick={addTodo}>Add</button>\n      {\n        todos.map((todo,i)=>{\n          return(\n         \n              <div key={i} >\n              {todo}\n            <button onClick={(e)=>{delTodo(i)}}>Delete</button>\n            <button onClick={(e)=>{editTodo(i)}}>Edit</button>\n            </div>\n          \n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}